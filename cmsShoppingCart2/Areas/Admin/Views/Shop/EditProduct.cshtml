@model cmsShoppingCart2.Models.ViewModels.ProductVM

@{
    ViewBag.Title = "Edit Product";
}

<h2>Edit Product</h2>
<style>
    input#ImageName {
        display: none
    }
</style>
@if (TempData["SM"] != null)
{
    <div class="alert alert-success">
        @TempData["SM"]
    </div>
}
@using (Html.BeginForm("EditProduct", "Shop", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="CategoryId">Category</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CategoryId, Model.Categories, "select Category", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="HasSidebar">Image Name</label>
            @Html.EditorFor(model => model.ImageName, new { htmlAttributes = new { @class = "form-control" } })
            <div class="col-md-10">
                <img src="~/Images/Uploads/Products/@Model.Id/Thumbs/@Model.ImageName" />
                <br /><br />
                <img src="#" id="imgpreview" />
                <br /><br />
                <div class="col-md-10">
                    <input type="file" name="file" value="" id="ImageUpload" />
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Products", "Products")
</div>
<hr />
@if (!Model.GalleryImages.Any())
{
    <h3>No images in Gallery Images</h3>

}
<form action="/admin/shop/ShowGalleryImages" method="post" id="dropzoneForm" class="dropzone" enctype="multipart/form-data">
    <div class="falback">
        <input type="file" name="file" multiple />
        <input type="submit" value="Upload" />
    </div>
</form>
<br /><br />
@foreach (var image in Model.GalleryImages)
{
    <div style="display:inline-block">
        <img src="~/Images/Uploads/Products/@Model.Id/Gallery/Thumbs/@image" />
        @Html.ActionLink("delete", "DleteImage", "Shop", new { @class = "deleteimage", data_name = image })
    </div>
}
@section Scripts{
    <script src="~/Scripts/dropzone/dropzone.js"></script>
    <link href="~/Scripts/dropzone/dropzone.css" rel="stylesheet" />
    <script>
        /*
         preview selected image
         */
        //function readURL(input) {
        //    if (input.files && input.files[0]) {
        //        var reader = new FileReader();
        //        reader.onload = function (e) {
        //            $("img#imgpreview")
        //                .attr("src", e.target.result)
        //                .width(200)
        //                .height(200);
        //        }
        //        reader.readAsDataURL(input.files[0]);
        //    }
        //}
        $("#ImageUpload").change(function () {
            readURL(this);
        })

        /*
        dropzone js
        */
        Dropzone.options.Dropzone = {
            acceptedFiles: "image/*",
            init: function () {
                this.on("complte", function (file) {
                    if (this.getUploadingFiles().length === 0 && this.getQueuedFiles().length === 0) {
                        location.reload();
                    }
                });
                this.on("sending", function (file, xhr, formData) {
                    formData.append(id, @Model.Id)
                })

            }
        }
    </script>
}
